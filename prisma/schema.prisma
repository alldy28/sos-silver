// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Pastikan ini sesuai dengan database Anda
  url      = env("DATABASE_URL")
}

// Model untuk Produk Anda
model SossilverProduct {
  id              String   @id @default(cuid())
  nama            String
  series          String?
  gramasi         Float    // Gunakan Float untuk angka desimal
  fineness        Int      // Fineness (misal: 999) adalah angka bulat
  hargaJual       Int
  hargaBuyback    Int
  tahunPembuatan  Int?
  gambarUrl       String?
  createdAt       DateTime @default(now())

  // Relasi: Satu produk punya BANYAK kode
  codes           GeneratedCode[]
  invoiceItems    InvoiceItem[]
}

// Model untuk Kode Unik
model GeneratedCode {
  id            String   @id @default(cuid())
  kode          String   @unique // Kode 8 digit yang unik
  sequentialId  Int?     // Sesuai kolom Anda
  isUsed        Boolean  @default(false)
  createdAt     DateTime @default(now())

  // Relasi: Satu kode milik SATU produk
  product   SossilverProduct @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
}


model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  
  // --- INI PERBAIKANNYA (Menambahkan relasi lawan ke Invoice) ---
  invoices    Invoice[]
}


model PriceImage {
  id       String @id @default("current_price_list")
  imageUrl String // URL lengkap dari Imgur/penyimpanan lain
}


model PromoSlide {
  id             String  @id @default(cuid())
  imageUrl       String  // URL gambar untuk slide ini
  destinationUrl String? // URL tujuan jika slide diklik (opsional)
  order          Int     // Urutan slide (misal: 1, 2, 3)
  isActive       Boolean @default(true) // Untuk menonaktifkan slide tanpa menghapus
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([order]) // Index untuk sorting
}

model Invoice {
  id              String        @id @default(cuid())
  invoiceNumber   String        @unique
  customerName    String
  customerPhone   String?
  customerAddress String?
  totalAmount     Int
  shippingFee     Int           @default(0)
  status          String        @default("UNPAID")
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  createdById     String
  createdBy       User          @relation(fields: [createdById], references: [id])
  items           InvoiceItem[]
}

model InvoiceItem {
  id              String @id @default(cuid())
  invoiceId       String
  invoice         Invoice @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  productId       String
  product         SossilverProduct @relation(fields: [productId], references: [id])
  quantity        Int
  priceAtTime     Int
}